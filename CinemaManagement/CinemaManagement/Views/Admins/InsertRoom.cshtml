@model CinemaManagement.Models.Room

@{
<<<<<<< HEAD
    ViewBag.Title = "InsertRoom";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
=======
    ViewBag.Title = "Insert Room";
   
>>>>>>> 5f75146e43c35d65e3bf8acab967c5e245a7b40e
}

<h2>Insert Room</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <hr />
    <div class="center-block">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        @Html.LabelFor(model => model.id_C, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<CinemaManagement.Models.Cinema> cinemas = new CinemaManagement.DAO.CinemaDAO().getAllCinema();
                List<SelectListItem> cSelectionList = new List<SelectListItem>();
                cinemas.ForEach(item =>
                {
                    cSelectionList.Add(new SelectListItem
                    {
                        Text = item.C_Name,
                        Value = Convert.ToString(item.id_C),
                    });
                });
            }
            @Html.DropDownList("Cinema", cSelectionList);
            @Html.ValidationMessageFor(model => model.id_C, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.R_SeatNumber, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.R_SeatNumber, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.R_SeatNumber, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.R_Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.R_Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.R_Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.R_Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<CinemaManagement.Models.Formality> formalities = new CinemaManagement.DAO.FormalityDAO().getAllFormality();
                List<SelectListItem> FSelectionList = new List<SelectListItem>();
                formalities.ForEach(item =>
                {
                    FSelectionList.Add(new SelectListItem
                    {
                        Text = item.F_Name,
                        Value = Convert.ToString(item.id_F),
                    });
                });
            }
            @Html.DropDownList("Type", FSelectionList);
            @Html.ValidationMessageFor(model => model.R_Type, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.R_Row, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.R_Row, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.R_Row, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.R_Col, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.R_Col, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.R_Col, "", new { @class = "text-danger" })
        </div>
    </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ListRoom")
</div>
